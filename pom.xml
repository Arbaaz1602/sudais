<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.alsudais</groupId>
    <artifactId>AlSudaisIAMService</artifactId>
    <version>1.0.0</version>
    <name>AlSudaisIAMService</name>
    <properties>
        <java.version>20</java.version>
        <spring-cloud.version>2022.0.2</spring-cloud.version>
        <springdoc-openapi-starter-webflux-ui.version>2.0.3</springdoc-openapi-starter-webflux-ui.version>
        <bugsnag.version>3.6.4</bugsnag.version>
        <jib.maven.plugin.version>3.3.0</jib.maven.plugin.version>
        <keycloak-admin-client.version>21.0.1</keycloak-admin-client.version>
        <keycloak-spring-boot-starter.version>21.0.1</keycloak-spring-boot-starter.version>
        <keycloak-adapter-bom.version>20.0.3</keycloak-adapter-bom.version>
        <feign-reactor.version>3.2.6</feign-reactor.version>
        <maven.compiler.source>20</maven.compiler.source>
        <maven.compiler.target>20</maven.compiler.target>
        <kubernetes-maven-plugin.version>1.10.1</kubernetes-maven-plugin.version>
        <logstash-logback-encoder.version>7.3</logstash-logback-encoder.version>
        <microprofile-health.version>2.7.0.Final</microprofile-health.version>
        <mapstruct.version>1.5.3.Final</mapstruct.version>
<!--        <cglib.version>3.3.0</cglib.version>-->
        <burningwave.version>12.62.7</burningwave.version>
        <sentry.version>6.18.1</sentry.version>
        <feign-reactor-webclient.version>4.0.0-SNAPSHOT</feign-reactor-webclient.version>


        <!-- GRPC -->
        <grpc-spring-boot-starter.version>2.14.0.RELEASE</grpc-spring-boot-starter.version>
        <reactor-grpc.version>1.2.4</reactor-grpc.version>
        <grpc.version>1.55.1</grpc.version>
        <protobuf-java-util.version>4.0.0-rc-2</protobuf-java-util.version>
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
        <protobuf.protoc.version>21.0-rc-1</protobuf.protoc.version>
        <os-maven-plugin.version>1.7.1</os-maven-plugin.version>

        <!-- DOCKER -->
        <DOCKER_REGISTRY_HOST>263534232744.dkr.ecr.me-south-1.amazonaws.com</DOCKER_REGISTRY_HOST>
        <DOCKER_REGISTRY_NAME>alsudais_iam_service</DOCKER_REGISTRY_NAME>
        <DEPLOYMENT_ENVIRONMENT>dev</DEPLOYMENT_ENVIRONMENT>

        <DOCKER_REGISTRY_USERNAME></DOCKER_REGISTRY_USERNAME>
        <DOCKER_REGISTRY_PASSWORD></DOCKER_REGISTRY_PASSWORD>

        <!-- KUBERNETES -->
        <K8S.NAMESPACE>alsudais</K8S.NAMESPACE>
        <K8S.REPLICAS>1</K8S.REPLICAS>


        <!-- DAPR -->
        <DAPR_APP_PORT>9091</DAPR_APP_PORT>
        <DAPR_APP_PROTOCOL>http</DAPR_APP_PROTOCOL>

        <!-- JKUBE  -->
        <jkube.createExternalUrls>true</jkube.createExternalUrls>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-r2dbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>r2dbc-postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j-impl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
            <version>${springdoc-openapi-starter-webflux-ui.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
        </dependency>
        <dependency>
            <groupId>com.bugsnag</groupId>
            <artifactId>bugsnag</artifactId>
            <version>${bugsnag.version}</version>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-admin-client</artifactId>
            <version>${keycloak-admin-client.version}</version>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-spring-boot-starter</artifactId>
            <version>${keycloak-spring-boot-starter.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.keycloak</groupId>
                    <artifactId>keycloak-spring-security-adapter</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.keycloak</groupId>
                    <artifactId>keycloak-spring-boot-2-adapter</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.playtika.reactivefeign</groupId>
            <artifactId>feign-reactor-spring-cloud-starter</artifactId>
            <version>${feign-reactor.version}</version>
            <type>pom</type>
            <exclusions>
                <exclusion>
                    <groupId>com.playtika.reactivefeign</groupId>
                    <artifactId>feign-reactor-webclient</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.playtika.reactivefeign</groupId>
                    <artifactId>feign-reactor-cloud</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>
        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>microprofile-health</artifactId>
            <version>${microprofile-health.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.burningwave</groupId>
            <artifactId>core</artifactId>
            <version>${burningwave.version}</version>
        </dependency>
        <dependency>
            <groupId>com.orbitalhq.reactivefeign</groupId>
            <artifactId>feign-reactor-webclient</artifactId>
            <version>${feign-reactor-webclient.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-spring-boot-starter-jakarta</artifactId>
            <version>${sentry.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-logback</artifactId>
            <version>${sentry.version}</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>cglib</groupId>-->
<!--            <artifactId>cglib</artifactId>-->
<!--            <version>${cglib.version}</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
        </dependency>

        <!-- TEST DEPENDENCIES -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- GRPC DEPENDENCIES-->
        <dependency>
            <groupId>net.devh</groupId>
            <artifactId>grpc-server-spring-boot-starter</artifactId>
            <version>${grpc-spring-boot-starter.version}</version>
        </dependency>
        <dependency>
            <groupId>net.devh</groupId>
            <artifactId>grpc-client-spring-boot-starter</artifactId>
            <version>${grpc-spring-boot-starter.version}</version>
        </dependency>
        <dependency>
            <groupId>com.salesforce.servicelibs</groupId>
            <artifactId>reactor-grpc-stub</artifactId>
            <version>${reactor-grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
            <version>${protobuf-java-util.version}</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>net.devh</groupId>-->
<!--            <artifactId>grpc-server-spring-boot-autoconfigure</artifactId>-->
<!--            <version>${grpc-server-spring-boot-starter.version}</version>-->
<!--        </dependency>-->
        <!-- GRPC DEPENDENCIES-->
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--            <dependency>-->
            <!--                <groupId>org.keycloak.bom</groupId>-->
            <!--                <artifactId>keycloak-adapter-bom</artifactId>-->
            <!--                <version>${keycloak-adapter-bom.version}</version>-->
            <!--                <type>pom</type>-->
            <!--                <scope>import</scope>-->
            <!--            </dependency>-->
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>orbital-snapshots1</id>
            <url>https://repo.orbitalhq.com/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>orbital-snapshots2</id>
            <url>https://repo.orbitalhq.com/release</url>
        </repository>
    </repositories>

    <build>
        <!-- GRPC -->
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>
        <!-- GRPC -->


        <plugins>
            <!-- GRPC -->
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>${protobuf-maven-plugin.version}</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:${protobuf.protoc.version}:exe:${os.detected.classifier}</protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
<!--                    <protocExecutable>/usr/local/bin/protoc</protocExecutable>-->
                    <protocPlugins>
                        <protocPlugin>
                            <id>reactor-grpc</id>
                            <groupId>com.salesforce.servicelibs</groupId>
                            <artifactId>reactor-grpc</artifactId>
                            <version>${reactor-grpc.version}</version>
                            <mainClass>com.salesforce.reactorgrpc.ReactorGrpcGenerator</mainClass>
                        </protocPlugin>
                    </protocPlugins>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- GRPC -->

            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                    <image>
                        <builder>paketobuildpacks/builder:tiny</builder>
                        <name>
                            ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_NAME}:${DEPLOYMENT_ENVIRONMENT}_${project.version}
                        </name>
                    </image>
                    <layers>
                        <enabled>true</enabled>
                    </layers>
                    <mainClass>com.alsudais.AlSudaisIAMServiceApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib.maven.plugin.version}</version>
                <configuration>
                    <to>
                        <image>
                            ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_NAME}:${DEPLOYMENT_ENVIRONMENT}_${project.version}
                        </image>
                    </to>
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jkube</groupId>
                <artifactId>kubernetes-maven-plugin</artifactId>
                <version>${kubernetes-maven-plugin.version}</version>
                <configuration>
                    <enricher>
                        <excludes>
                            <exclude>jkube-git</exclude>
                            <exclude>jkube-maven-scm</exclude>
                            <exclude>jkube-healthcheck-spring-boot</exclude>
                        </excludes>
                        <config>
                            <jkube-namespace>
                                <namespace>${K8S.NAMESPACE}</namespace>
                            </jkube-namespace>
                            <jkube-service>
                                <name>alsudais-iam-service</name>
                                <multiPort>true</multiPort>
                                <port>8081:8081,9091:9091</port>
                            </jkube-service>
                            <jkube-project-label>
                                <app>alsudais-iam-service</app>
                                <provider>alsudais</provider>
                            </jkube-project-label>
                            <jkube-revision-history>
                                <limit>5</limit>
                            </jkube-revision-history>
                            <jkube-healthcheck-thorntail-v2>
                                <port>8081</port>
                                <scheme>HTTP</scheme>
                                <path>/actuator/health</path>
                                <failureThreshold>3</failureThreshold>
                                <successThreshold>1</successThreshold>
                            </jkube-healthcheck-thorntail-v2>
                        </config>
                    </enricher>

                    <namespace>${K8S.NAMESPACE}</namespace>

                    <authConfig>
                        <username>${DOCKER_REGISTRY_USERNAME}</username>
                        <password>${DOCKER_REGISTRY_PASSWORD}</password>
                    </authConfig>

                    <images>
                        <image>
                            <name>
                                ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_NAME}:${DEPLOYMENT_ENVIRONMENT}_${project.version}
                            </name>
                            <alias>alsudais-iam-service</alias>
                            <build>
                                <ports>
                                    <port>8081</port>
                                    <port>9091</port>
                                </ports>
                            </build>
                        </image>
                    </images>

                    <resources>
                        <controllerName>alsudais-iam-service</controllerName>
                        <replicas>${K8S.REPLICAS}</replicas>
                        <imagePullPolicy>Always</imagePullPolicy>
                        <annotations>
                            <deployment>
                                <property>
                                    <name>dapr.io/app-id</name>
                                    <value>${project.artifactId}</value>
                                </property>
                                <property>
                                    <name>dapr.io/enabled</name>
                                    <value>true</value>
                                </property>
                                <property>
                                    <name>dapr.io/app-port</name>
                                    <value>${DAPR_APP_PORT}</value>
                                </property>
                                <property>
                                    <name>dapr.io/app-protocol</name>
                                    <value>${DAPR_APP_PROTOCOL}</value>
                                </property>
                            </deployment>
                        </annotations>
                    </resources>

                    <helm>
                        <description>Alsudais IAM Service helm chart</description>
                        <sources></sources>
                        <home>AlSudais</home>
                        <maintainers>
                            <maintainer>
                                <name>Susmit Khot</name>
                                <email>susmit.khot@neosoftmail.com</email>
                            </maintainer>
                        </maintainers>
                        <outputDir>./src/main/resources/charts</outputDir>
                    </helm>
                </configuration>
                <executions>
                    <execution>
                        <phase>none</phase>
                        <goals>
                            <goal>resource</goal>
                            <goal>build</goal>
                            <goal>helm</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>compile-no-fork</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
